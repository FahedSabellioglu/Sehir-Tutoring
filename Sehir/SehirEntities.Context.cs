//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sehir
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class SehirTutoringEntities : DbContext
    {
        public SehirTutoringEntities()
            : base("name=SehirTutoringEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AdminTable> AdminTables { get; set; }
        public virtual DbSet<C_feedBack> C_feedBack { get; set; }
        public virtual DbSet<Course> Courses { get; set; }
        public virtual DbSet<CourseRequest> CourseRequests { get; set; }
        public virtual DbSet<H_feedBack> H_feedBack { get; set; }
        public virtual DbSet<Homework> Homework { get; set; }
        public virtual DbSet<homework_request> homework_request { get; set; }
        public virtual DbSet<HomeworkMaker> HomeworkMakers { get; set; }
        public virtual DbSet<HomeworkRequest> HomeworkRequests { get; set; }
        public virtual DbSet<lec_request> lec_request { get; set; }
        public virtual DbSet<Lecturer> Lecturers { get; set; }
        public virtual DbSet<User> Users { get; set; }
    
        public virtual ObjectResult<CourseRequestsPending_Result> CourseRequestsPending(Nullable<int> id, string code)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var codeParameter = code != null ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CourseRequestsPending_Result>("CourseRequestsPending", idParameter, codeParameter);
        }
    
        public virtual ObjectResult<CoursesFeedBacks_Result> CoursesFeedBacks(Nullable<int> t_ID, string code)
        {
            var t_IDParameter = t_ID.HasValue ?
                new ObjectParameter("T_ID", t_ID) :
                new ObjectParameter("T_ID", typeof(int));
    
            var codeParameter = code != null ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CoursesFeedBacks_Result>("CoursesFeedBacks", t_IDParameter, codeParameter);
        }
    
        public virtual ObjectResult<CoursesList_Result> CoursesList(Nullable<int> id, Nullable<bool> belongs)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var belongsParameter = belongs.HasValue ?
                new ObjectParameter("belongs", belongs) :
                new ObjectParameter("belongs", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CoursesList_Result>("CoursesList", idParameter, belongsParameter);
        }
    
        public virtual ObjectResult<CoursesOffer_Result> CoursesOffer(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CoursesOffer_Result>("CoursesOffer", idParameter);
        }
    
        public virtual ObjectResult<HomeworkFeedBacks_Result> HomeworkFeedBacks(Nullable<int> t_ID, string code, string title)
        {
            var t_IDParameter = t_ID.HasValue ?
                new ObjectParameter("T_ID", t_ID) :
                new ObjectParameter("T_ID", typeof(int));
    
            var codeParameter = code != null ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("title", title) :
                new ObjectParameter("title", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HomeworkFeedBacks_Result>("HomeworkFeedBacks", t_IDParameter, codeParameter, titleParameter);
        }
    
        public virtual ObjectResult<HomeworkList_Result> HomeworkList(Nullable<int> id, Nullable<bool> belongs)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var belongsParameter = belongs.HasValue ?
                new ObjectParameter("belongs", belongs) :
                new ObjectParameter("belongs", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HomeworkList_Result>("HomeworkList", idParameter, belongsParameter);
        }
    
        public virtual ObjectResult<UserCourseInfo_Result> UserCourseInfo(Nullable<int> id, string c_Code)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var c_CodeParameter = c_Code != null ?
                new ObjectParameter("C_Code", c_Code) :
                new ObjectParameter("C_Code", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UserCourseInfo_Result>("UserCourseInfo", idParameter, c_CodeParameter);
        }
    
        public virtual ObjectResult<UserHomeworkInfo_Result> UserHomeworkInfo(Nullable<int> id, string title, string code)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var titleParameter = title != null ?
                new ObjectParameter("title", title) :
                new ObjectParameter("title", typeof(string));
    
            var codeParameter = code != null ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UserHomeworkInfo_Result>("UserHomeworkInfo", idParameter, titleParameter, codeParameter);
        }
    
        public virtual ObjectResult<string> UserRoles(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("UserRoles", idParameter);
        }
    
        public virtual ObjectResult<HomeworksRequestsPending_Result> HomeworksRequestsPending(Nullable<int> id, string code, string title)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var codeParameter = code != null ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("title", title) :
                new ObjectParameter("title", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HomeworksRequestsPending_Result>("HomeworksRequestsPending", idParameter, codeParameter, titleParameter);
        }
    }
}
